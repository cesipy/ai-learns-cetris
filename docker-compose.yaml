services: 
# cnn, expert_counter = 1, amount_pieces = 7
# new, complex reward
  experiment_1: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm 


# cnn, expert_counter = 2, amount_pieces = 7
# new, complex reward
  experiment_2:
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm     

# cnn, expert_counter = 3, amount_pieces = 7
# new, complex reward
  experiment_3: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm     
  
# cnn, expert_counter = 10, amount_pieces = 2
# more max height punishment
  experiment_4: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm

# cnn, expert_counter = 10, amount_pieces = 2
# super simple reward , w piececount, linescleared and game_over
  experiment_5: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm     


  experiment_6: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm     


  experiment_7: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm     