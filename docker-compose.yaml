services: 
# reward: only random, new reward
# expert_counter = 100
  experiment_1: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm 

# reward: only score + punishment for game end
# expert_counter = 10
  experiment_2:
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm     

# reward: score + max_height, etc; + punishment for game end
# expert_counter = 10
  experiment_3: 
    build: 
      context: .
      dockerfile: Dockerfile
    image: ai-learns-tetris
    # special case for my tetris implementation, from gpt. 
    # currently no visuals
    tty: true          # Allocates a pseudo-TTY
    stdin_open: true   # Keeps stdin open
    environment:
      - TERM=xterm     